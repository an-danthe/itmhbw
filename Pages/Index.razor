@page "/"

<div class="container">
    <div class="row">
        <div class="col">
            <button type="button" style="width: 100px" class="btn btn-dark" @onclick="PreviousItem">Сюда</button>
        </div>
        <div class="col-8">
            <div class="row">
                <div class="col">
                    <Navigation @ref="_navigation" Items="Items" OnItemChanged="SetDefaultItem" />
                </div>
            </div>
        </div>
        <div class="col">
            <button type="button" style="width: 100px" class="btn btn-dark" @onclick="NextItem">Туда</button>
        </div>
    </div>
    <div class="row">
        <div class="col">
            @ShowCurrentComponent()
        </div>
    </div>
</div>

@code
{
    [Inject]
    private IComponentService _componentService { get; set; }

    public IReadOnlyList<Type> Items { get; set; }

    private Type _currentItemIndex { get; set; }

    private Navigation<Type> _navigation;

    protected override void OnInitialized()
    {
        Items = _componentService.Get();

        if (Items == null || Items.Count == 0)
            throw new Exception("Items is null or empty");

        SetDefaultItem(Items[0]);

        //_navigation.OnClick(0);
    }

    private RenderFragment ShowCurrentComponent() => builder => 
    {
        if (_currentItemIndex != null)
        {
            builder.OpenComponent(0, _currentItemIndex);
            builder.CloseComponent();
        }
    };

    private void SetDefaultItem(Type item)
    {
        _currentItemIndex = item;

        StateHasChanged();
    }

    private void NextItem()
    {
        _navigation.Next();
    }

    private void PreviousItem()
    {
        _navigation.Previous();
    }
}